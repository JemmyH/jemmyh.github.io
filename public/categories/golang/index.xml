<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on Jemmy&#39;s blog</title>
    <link>http://localhost:1313/categories/golang/</link>
    <description>Recent content in Golang on Jemmy&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 18 Sep 2020 23:41:39 +0000</lastBuildDate><atom:link href="http://localhost:1313/categories/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Golang-map详解</title>
      <link>http://localhost:1313/2020/09/18/golang-map%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Fri, 18 Sep 2020 23:41:39 +0000</pubDate>
      
      <guid>http://localhost:1313/2020/09/18/golang-map%E8%AF%A6%E8%A7%A3/</guid>
      <description>一、设计原理 哈希表(也就是我们说的map)是计算机应用领域非常重要的数据结构之一，读写的时间复杂度均是O(1)，是典型的 以空间换时间 设计。它</description>
    </item>
    
    <item>
      <title>Golang-GPM调度原理</title>
      <link>http://localhost:1313/2020/09/18/golang-gpm%E8%B0%83%E5%BA%A6%E5%8E%9F%E7%90%86/</link>
      <pubDate>Fri, 18 Sep 2020 01:53:29 +0000</pubDate>
      
      <guid>http://localhost:1313/2020/09/18/golang-gpm%E8%B0%83%E5%BA%A6%E5%8E%9F%E7%90%86/</guid>
      <description>一、概述 1. 为什么在内核的线程调度器之外，Go 还需要实现一个自己的调度器 主要解决系统线程太重的问题： 创建与切换线程 太重：都需要在用户态和内核态</description>
    </item>
    
    <item>
      <title>Golang-unsafe包详解</title>
      <link>http://localhost:1313/2020/09/17/golang-unsafe%E5%8C%85%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Thu, 17 Sep 2020 01:53:29 +0000</pubDate>
      
      <guid>http://localhost:1313/2020/09/17/golang-unsafe%E5%8C%85%E8%AF%A6%E8%A7%A3/</guid>
      <description>1. Go语言指针的限制 go语言中也有指针，但相对C语言的指针来说，有了很多限制，但这也算是go的成功之处：既可以享受指针带来的便利，又避免了指</description>
    </item>
    
    <item>
      <title>Golang-数组,切片和字符串</title>
      <link>http://localhost:1313/2020/09/16/golang-%E6%95%B0%E7%BB%84%E5%88%87%E7%89%87%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Wed, 16 Sep 2020 02:15:54 +0000</pubDate>
      
      <guid>http://localhost:1313/2020/09/16/golang-%E6%95%B0%E7%BB%84%E5%88%87%E7%89%87%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>在主流的编程语言中数组及其相关的数据结构是使用得最为频繁的，只有在它(们)不能满足时才会考虑链表、hash 表（hash 表可以看作是数组和链表</description>
    </item>
    
    <item>
      <title>Golang-关于函数调用</title>
      <link>http://localhost:1313/2020/09/15/golang-%E5%85%B3%E4%BA%8E%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8/</link>
      <pubDate>Tue, 15 Sep 2020 02:05:36 +0000</pubDate>
      
      <guid>http://localhost:1313/2020/09/15/golang-%E5%85%B3%E4%BA%8E%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8/</guid>
      <description>一、 前言 我们完成程序的编写之后，经过编译，编译器会将我们的程序编译成一行行机器指令，放到一个可执行文件中；程序执行时，可执行文件被加载到内存</description>
    </item>
    
  </channel>
</rss>
